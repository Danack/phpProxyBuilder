
Questions / Notes?
- Basic code formatting, is netbeans autoformat ok with you? I only use ALT+SHIFT+F for past 4 years :) 
- I would like to make the library easy to use with symforny2 and ZF2, any ideas how avoid issues?
- How do we shield our library code from 3rd party components like logger/cache/circuitbreaker? see "Rich Proxies" below.
- I would like to keep tests in separate dir and build package without non-production code, is that ok?
- Really not sure about naming, maybe we have some google chats as often as possible to agree on some naming?
I would prefer to keep names meaningful and simple. I Would prefer not to mimic AOP full but only takes what we need.
- Can we come up with more distinct name than php-proxy? For example there is a lot of phpProxy results in google. 
Giving it a distinct name will make it easier to find us. Also name spaces will be more unique etc. Im open for ideas :)
- Im really open for feedback on all the naming to keep it neat and consistent :)
- Is the jenkins setup you created free or is it paid account? If i had access i can make changes to get code coverage.
With time we can add php documentation and code sniffer etc, but no rush. 
- I am not sure if it is worth to add 5.2 compatibility to be honest, how do you think?


Rich Proxies - I would like to provide default generic proxy implementations but they would need 3rd party code:
    CachingProxy            -> cahces method calls
    CircuitBreakerProxy     -> fails quickly if service is down
    MethodCallLoggingProxy  -> logs method and args
    InstrumentationProxy    -> counters/timers
    ExceptionLoggingProxy   -> logs exception and rethrows


Useful links:
    Spring AOP intro - its way too much for us but worth reviewing
        http://static.springsource.org/spring/docs/3.2.x/spring-framework-reference/html/aop.html#aop-introduction

    PHP AOP lib to check out some more, code looks good:
        https://github.com/lisachenko/go-aop-php

    PECL AOP - beta and C based:
        https://github.com/AOP-PHP/AOP
        